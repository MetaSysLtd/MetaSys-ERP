Sounds like the login guard is firing even after a successful authentication, so you’re getting bounced right back to the login page. Let’s give Replit a clear set of steps to debug and resolve the redirect loop:

---

## 🔄 Issue: Login → Dashboard → Login Loop

**Symptom:**

1. You submit credentials →
2. You briefly land on the dashboard →
3. Immediately you’re pushed back to `/login`.

---

### 📋 What to Check

1. **Session Persistence**

   * Confirm that your authentication cookie or token is being set on the client and sent on subsequent requests.
   * After login, inspect browser dev‐tools → Storage/Cookies to see if the session cookie (or JWT) exists and is valid.

2. **Auth Check Endpoint**

   * The client likely calls `/api/auth/me` (or similar) on every page load.
   * Ensure that this endpoint truly returns `200 OK + user` when you’re logged in. If it returns `401`, the client will think you’re not authenticated and redirect you.

3. **ProtectedRoute Logic**

   * In your React (or equivalent) router, find the component that wraps protected pages (e.g. `<ProtectedRoute>`).
   * Verify that it only redirects to `/login` when:

     * the auth context is fully initialized **and**
     * `user === null`
   * It should **not** redirect while the auth check is still “pending” or “loading.”

4. **Login → Redirect Flow**

   * After a successful login POST, your code probably does something like:

     ```ts
     await loginApi();
     router.push('/dashboard');
     ```
   * Immediately after pushing, your auth context should be updated (e.g. `setUser(...)`) **before** the client issues the next `/auth/me` call.

---

### 🛠 A Precise Ask for Replit

> **Hey team, we’ve introduced a redirect loop post-login.**
>
> **Please:**
>
> 1. **Verify** that on login success you set the session cookie (or token) and that `/api/auth/me` returns 200 for that session.
> 2. **Adjust** the ProtectedRoute (or equivalent) so it:
>
>    * Shows a **loading state** while it’s verifying the session.
>    * **Only** redirects to `/login` when the session check has completed and confirmed you’re not logged in.
> 3. **Ensure** after the POST to `/api/auth/login` and `router.push('/dashboard')`, the AuthContext (or auth store) is updated **before** triggering any re-renders or auth checks.
> 4. **Test** that:
>
>    * On login: you stay on `/dashboard`.
>    * On page reload of `/dashboard`: you remain there (no bounce).
>    * On logout: you correctly go back to `/login`.

---

### ✅ Acceptance Criteria

* **Login → Dashboard** remains on the dashboard indefinitely until the user logs out.
* **Reload** on `/dashboard` does **not** bounce back to login when credentials are still valid.
* **Auth guard** only redirects once the auth check has fully resolved.

---

Once they’ve made these adjustments, please try logging in again, reload the dashboard, and confirm the loop has been eliminated.
