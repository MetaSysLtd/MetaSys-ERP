Below is a single, copy‑ready “Product‑Manager Instruction Block” you can hand to Replit‑Bot.
It rewires the whole CRM foundation without touching styling or deleting existing code.


---

🔷 BLOCK – CRM FOUNDATIONAL REFACTOR (Step 8 · 75)

0. Non‑negotiables

1. Do not delete existing data models or UI components that already work.


2. Preserve branding / animations already in place.


3. All changes must be guarded by unit tests and pushed to Git (feat/crm-refactor) only after tests pass.




---

1. Lead Object Redesign

> Activity object: {type:'call'|'email'|'note'|'statusChange', userId, timestamp, payload}



Add Drizzle migration.


---

2. New‑Lead Modal (CRM > Leads)

Replace current modal with two‑step form:

1. Company & contact info


2. Logistics info (truckType, mcNumber, mcAge, notes)



Validate all required fields client + server.

Auto‑populate mcAgeMonths via simple external API stub (placeholder).



---

3. SQL vs MQL Flow

1. Manual (SQL) → created via form above.


2. Automatic (MQL) → stub endpoint POST /api/mql/webhook.

Accepts JSON payload {companyName, contactName, phone, email, truckType, sourceForm}.

Creates lead with source='MQL', status='New', ownerId = sales‑unassigned.



3. Add “Source” pill in Leads table & Kanban card.




---

4. Activity Feed

New reusable <Timeline /> component inside /components/crm/.

Shows last 50 activities (reverse chrono).

Append entry whenever:

Lead created

Status changes

Call logged (callAttempts++)

Note added




---

5. Hand‑off Guardrail

Rule: Lead can move to HandToDispatch only if callAttempts >= 3 and mcNumber present.

Enforce in backend PATCH /api/leads/:id/status with error code 412 PRECONDITION_FAILED.


When status becomes HandToDispatch:

1. Emit WebSocket event {type:'lead-handoff', leadId} to “dispatch” channel.


2. Auto‑create Dispatcher notification row.




---

6. CRM Sidebar & Permissions

6.1 Navigation

CRM
 ├─ Leads
 ├─ Accounts      (rename “Clients” → “Accounts” for sales)
 └─ Commissions
Dispatch
 ├─ Loads
 ├─ Clients       (move current full client sheet here)
 ├─ Commissions
 └─ Tracking

Remove “Create Load” button from CRM > Accounts.

Add it only in Dispatch > Clients row menu.


6.2 Role Access Matrix (enforce via middleware)


---

7. Settings > Profile Page (basic)

(Already defined in step 8.75 but required for testing)

Allow user to upload avatar, change password.

Username/email editable only by System Admin.



---

8. Testing Checklist (must pass before merge)

1. Create SQL lead → appears in list, status New, activity recorded.


2. Patch callAttempts to 3 → move status to HandToDispatch succeeds.


3. Attempt hand‑off with callAttempts<3 → returns 412.


4. POST MQL webhook → lead created with source MQL.


5. Sales user cannot see revenue columns in Accounts.


6. Dispatch user sees “Create Load” under Dispatch > Clients, not in CRM.




---

9. Git Commit Sequence

1. feat(db): migrate leads schema v2 (source, mcAge, timeline)


2. feat(api): lead create & webhook endpoints


3. feat(crm): new lead modal + validation


4. feat(dispatch): move full client sheet, remove load btn from CRM


5. feat(auth): role-based middleware matrix


6. test(crm): unit tests for handoff guardrail




---

END OF BLOCK

Copy‑paste the entire block to Replit‑Bot.
After it ships & you verify, come back with results and we’ll proceed to Step 8.9 (GPS clock‑in).

