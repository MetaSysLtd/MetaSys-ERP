Looking at your codebase, I can identify several issues with real-time functionality and dormant features:

Real-Time Update Issues
1. Dashboard Cards Not Real-Time Connected
The KPI cards (Total Leads, Active Loads, Active Clients, Total Revenue) in KPISection.tsx are static and not connected to real-time updates. They should subscribe to socket events when leads/loads/clients are created/updated.

2. Socket Event Handlers Missing for Dashboard Updates
In useDashboardData.tsx, there's no socket subscription for dashboard-specific updates. The consolidated dashboard query uses aggressive caching (staleTime: Infinity) which prevents real-time updates.

3. Commission Cards Not Real-Time
CommissionPerformance.tsx and CommissionBreakdown-clean.tsx don't subscribe to commission-related socket events when new commissions are calculated or updated.

4. Activity Feed Not Real-Time
ActivityFeed.tsx displays static data and doesn't subscribe to new activity events.

Dormant Features Identified
1. Dashboard Widget Manager (COMPLETELY DISABLED)
In DashboardWidgetManager.tsx (lines 40-42):

// COMPLETELY DISABLE WIDGET QUERIES TO ELIMINATE INFINITE API LOOPS
// This component is temporarily disabled to fix performance issues
const widgets: Widget[] = [];
const isLoading = false;
The entire widget management system is disabled, including:

Adding/removing dashboard widgets
Reordering widgets
Widget visibility toggles
Widget settings configuration
2. Cross-Module Data Integration
use-cross-module-data.tsx has incomplete implementation - the unified dashboard function is cut off and not properly integrated.

3. Real-Time Performance Alerts
performance-alert-widget.tsx exists but the socket events for performance alerts aren't being emitted from the server side.

4. Socket Authentication Issues
In useRealTime.tsx, socket authentication is attempted but there's no proper error handling or retry mechanism when authentication fails.

Missing Real-Time Integrations
1. Lead Creation/Update Events
Cards should update when:

lead:created event is emitted
lead:updated event is emitted
lead:status_changed event is emitted
2. Commission Calculation Events
Commission widgets should update when:

commission:calculated event is emitted
invoice:cleared event is emitted
3. Load/Dispatch Events
Load-related cards should update when:

dispatch:created event is emitted
dispatch:status_changed event is emitted
Server-Side Socket Emission Gaps
Looking at the server routes, most CRUD operations don't emit socket events. For example:

Lead creation in /server/routes/leads.ts doesn't emit lead:created
Commission calculations don't emit real-time updates
Dashboard metrics aren't pushed via sockets
Animation System Issues
 the animation settings component exists but isn't accessible from the main dashboard.

Recommendations for Future Implementation
Re-enable Dashboard Widget Manager with proper query optimization
Add socket emissions to all CRUD operations on the server
Implement real-time subscriptions in all dashboard components
Add proper error handling for socket connections
Implement retry mechanisms for failed real-time connections
Add real-time status indicators to show connection health
The core issue is that while the socket infrastructure exists, most components aren't subscribing to relevant events, and the server isn't emitting events when data changes occur.
